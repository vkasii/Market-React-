{"version":3,"file":"static/js/839.ba1052a1.chunk.js","mappings":"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","sources":["webpack://dummyMarket/./src/components/productCards/ProductCards.module.css?6d94","webpack://dummyMarket/./src/components/categories/Categories.module.css?3519","components/categories/Categories.js","webpack://dummyMarket/./src/components/productCard/ProductCard.module.css?f95b","components/productCard/ProductCard.js","components/productCards/ProductCards.js","pages/products/Products.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardsContainer\":\"ProductCards_cardsContainer__jdgBf\"};","// extracted by mini-css-extract-plugin\nexport default {\"categoriesContainer\":\"Categories_categoriesContainer__sbYmQ\",\"categoryItem\":\"Categories_categoryItem__Ty4Zr\",\"darkCategory\":\"Categories_darkCategory__QZKW-\",\"activeCategory\":\"Categories_activeCategory__fnfD9\"};","import { useSelector } from 'react-redux';\nimport styles from './Categories.module.css'\n\nconst Categories = ({ categories, currentCategory, setCurrentCategory }) => {\n  const darkMode = useSelector(state => state.darkMode.value)\n\n  return (\n    <div className={styles.categoriesContainer}>\n      {categories.map(category => (\n        <button\n          key={category}\n          className={`${styles.categoryItem} ${category === currentCategory ? styles.activeCategory : ''} ${darkMode ? styles.darkCategory : '' }`}\n          type='button'\n          onClick={() => setCurrentCategory(category)}>\n          {category}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default Categories;\n","// extracted by mini-css-extract-plugin\nexport default {\"cardItem\":\"ProductCard_cardItem__zHDic\",\"whiteCard\":\"ProductCard_whiteCard__AjIjZ\",\"cardImage\":\"ProductCard_cardImage__HloC7\",\"cardContainer\":\"ProductCard_cardContainer__fazIk\",\"productCardTitle\":\"ProductCard_productCardTitle__ydc-P\",\"cardInfo\":\"ProductCard_cardInfo__pi-VI\",\"detail\":\"ProductCard_detail__lg6Km\",\"buttonsContainer\":\"ProductCard_buttonsContainer__mQ+fy\",\"addBtn\":\"ProductCard_addBtn__DdG2i\",\"detailBtn\":\"ProductCard_detailBtn__DInja\",\"added\":\"ProductCard_added__+kSNI\"};","import { useSelector } from 'react-redux';\nimport Cart from '../cart/Cart';\nimport styles from './ProductCard.module.css';\nimport { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport Spinner from '../spinner/Spinner';\n\nconst ProductCard = ({ product, addProductToCart, removeProductFromCart, isProductInCart, index }) => {\n  const inCart = isProductInCart(product.id);\n  const [isLoading, setIsLoading] = useState(true)\n\n  const darkMode = useSelector(state => state.darkMode.value)\n\n  const handleImageLoad = () => {\n    setIsLoading(false);\n  };\n\n  return (\n    <div key={product.id} className={`${darkMode ? '' : styles.whiteCard} ${styles.cardItem}`}>\n      {isLoading && <Spinner />}\n      <img\n        // src={product.thumbnail}\n        src={`http://localhost:4000/image?url=${encodeURIComponent(product.thumbnail)}&width=300`}\n        width=\"300\"\n        height=\"300\"\n        onLoad={handleImageLoad}\n        className={styles.cardImage}\n        alt={product.title}\n        loading={index > 7 ? 'lazy' : 'eager'}\n        fetchPriority={index > 7 ? 'auto' : 'high'}\n      />\n      <div className={styles.cardContainer}>\n        <h4 className={styles.productCardTitle}>\n          <Link to={`/product/${product.id}`}>{product.title}</Link>\n        </h4>\n        <p className={styles.cardInfo}>Price: <span className='action-color'>${product.price}</span></p>\n        <p className={styles.detail}>Category: <strong>{product.category}</strong></p>\n        <div className={styles.buttonsContainer}>\n          <Link className={styles.detailBtn} to={`/product/${product.id}`}>Details</Link>\n          {\n            inCart\n              ? <Cart onClick={() => removeProductFromCart(product.id)} badge={String.fromCharCode(10003)} className={styles.added} />\n              : <Cart onClick={() => addProductToCart(product)} />\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProductCard;\n","import { useEffect, useState } from 'react';\nimport styles from './ProductCards.module.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProduct, removeProduct, initCart } from '../../redux/cartProductsSlice/cartProductsSlice';\nimport { getUniqueCategories } from '../../redux/productsSlice/productsSlice'\nimport Categories from '../categories/Categories';\nimport ProductCard from '../productCard/ProductCard';\nimport Spinner from '../spinner/Spinner';\nimport { useParams } from 'react-router-dom';\n\nconst ProductCards = () => {\n  const { category } = useParams()\n\n  const [filteredProducts, setFilteredProducts] = useState([])\n  const [currentCategory, setCurrentCategory] = useState(category || 'all')\n\n  const cartProducts = useSelector(state => state.cart.cartProducts)\n  const { products, loading, error } = useSelector(state => state.products)\n  const categories = useSelector(getUniqueCategories)\n  const dispatch = useDispatch()\n\n\n  useEffect(() => {\n    dispatch(initCart());\n    \n  }, [dispatch])\n  \n  useEffect(() => {\n    if (!currentCategory || currentCategory === 'all') {\n      console.log('products', products);\n      return setFilteredProducts(products)\n    }\n    return setFilteredProducts(products.filter(product => product.category === currentCategory && product))\n\n  }, [products, currentCategory])\n\n  function isProductInCart(id) {\n    return cartProducts.some(product => product.id === id)\n  }\n\n  function addProductToCart(product) {\n    dispatch(addProduct({ ...product, amount: 1, summ: product.price }))\n  }\n\n  function removeProductFromCart(id) {\n    dispatch(removeProduct(id));\n  }\n\n  return (\n    <div className='container'>\n      <Categories categories={['all', ...categories]} currentCategory={currentCategory} setCurrentCategory={setCurrentCategory} />\n      {loading\n        ? <Spinner />\n        : error\n          ? <p style={{ textAlign: 'center' }}>Sorry, there is an issue with the server. We are working hard to fix it as soon as possible</p>\n          : <div className={styles.cardsContainer}>\n            {filteredProducts.map((product, index) => (\n              <ProductCard\n                key={product.id}\n                product={product}\n                index={index}\n                addProductToCart={addProductToCart}\n                removeProductFromCart={removeProductFromCart}\n                isProductInCart={isProductInCart}\n              />\n            ))}\n          </div>}\n    </div >\n  )\n}\n\nexport default ProductCards","import ProductCards from '../../components/productCards/ProductCards';\n\nconst Products = () => {\n  return (\n    <div>\n      <ProductCards />\n    </div>\n  )\n}\n\nexport default Products"],"names":["_ref","categories","currentCategory","setCurrentCategory","darkMode","useSelector","state","value","_jsx","className","styles","children","map","category","type","onClick","product","addProductToCart","removeProductFromCart","isProductInCart","index","inCart","id","isLoading","setIsLoading","useState","_jsxs","Spinner","src","encodeURIComponent","thumbnail","width","height","onLoad","handleImageLoad","alt","title","loading","fetchPriority","Link","to","price","Cart","badge","String","fromCharCode","ProductCards","useParams","filteredProducts","setFilteredProducts","cartProducts","cart","products","error","getUniqueCategories","dispatch","useDispatch","some","addProduct","amount","summ","removeProduct","useEffect","initCart","filter","console","log","Categories","style","textAlign","ProductCard","Products"],"sourceRoot":""}