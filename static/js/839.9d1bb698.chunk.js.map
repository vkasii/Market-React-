{"version":3,"file":"static/js/839.9d1bb698.chunk.js","mappings":"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","sources":["webpack://dummyMarket/./src/components/productCards/ProductCards.module.css?6d94","webpack://dummyMarket/./src/components/categories/Categories.module.css?3519","components/categories/Categories.js","webpack://dummyMarket/./src/components/productCard/ProductCard.module.css?f95b","components/productCard/ProductCard.js","components/productCards/ProductCards.js","pages/products/Products.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardsContainer\":\"ProductCards_cardsContainer__jdgBf\"};","// extracted by mini-css-extract-plugin\nexport default {\"categoriesContainer\":\"Categories_categoriesContainer__sbYmQ\",\"categoryItem\":\"Categories_categoryItem__Ty4Zr\",\"darkCategory\":\"Categories_darkCategory__QZKW-\",\"activeCategory\":\"Categories_activeCategory__fnfD9\"};","import { useSelector } from 'react-redux';\nimport styles from './Categories.module.css'\n\nconst Categories = ({ categories, currentCategory, setCurrentCategory }) => {\n  const darkMode = useSelector(state => state.darkMode.value)\n\n  return (\n    <div className={styles.categoriesContainer}>\n      {categories.map(category => (\n        <button\n          key={category}\n          className={`${styles.categoryItem} ${category === currentCategory ? styles.activeCategory : ''} ${darkMode ? styles.darkCategory : '' }`}\n          type='button'\n          onClick={() => setCurrentCategory(category)}>\n          {category}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default Categories;\n","// extracted by mini-css-extract-plugin\nexport default {\"cardItem\":\"ProductCard_cardItem__zHDic\",\"whiteCard\":\"ProductCard_whiteCard__AjIjZ\",\"cardImage\":\"ProductCard_cardImage__HloC7\",\"cardContainer\":\"ProductCard_cardContainer__fazIk\",\"productCardTitle\":\"ProductCard_productCardTitle__ydc-P\",\"cardInfo\":\"ProductCard_cardInfo__pi-VI\",\"detail\":\"ProductCard_detail__lg6Km\",\"buttonsContainer\":\"ProductCard_buttonsContainer__mQ+fy\",\"addBtn\":\"ProductCard_addBtn__DdG2i\",\"detailBtn\":\"ProductCard_detailBtn__DInja\",\"added\":\"ProductCard_added__+kSNI\"};","import { useSelector } from 'react-redux';\nimport Cart from '../cart/Cart';\nimport styles from './ProductCard.module.css';\nimport { Link } from 'react-router-dom';\n\nconst ProductCard = ({ product, addProductToCart, removeProductFromCart, isProductInCart, index }) => {\n  const inCart = isProductInCart(product.id);\n\n  const darkMode = useSelector(state => state.darkMode.value)\n\n  return (\n    <div key={product.id} className={`${darkMode ? '' : styles.whiteCard} ${styles.cardItem}`}>\n      <img\n        src={`http://localhost:4000/image?url=${encodeURIComponent(product.thumbnail)}&width=300`}\n        width=\"300\"\n        height=\"300\"\n        className={styles.cardImage}\n        alt={product.title}\n        loading={index > 7 ? 'lazy' : 'eager'}\n        fetchPriority={index > 7 ? 'auto' : 'high'}\n      />\n      <div className={styles.cardContainer}>\n        <h4 className={styles.productCardTitle}>\n          <Link to={`/product/${product.id}`}>{product.title}</Link>\n        </h4>\n        <p className={styles.cardInfo}>Price: <span className='action-color'>${product.price}</span></p>\n        <p className={styles.detail}>Category: <strong>{product.category}</strong></p>\n        <div className={styles.buttonsContainer}>\n          <Link className={styles.detailBtn} to={`/product/${product.id}`}>Details</Link>\n          {\n            inCart\n              ? <Cart onClick={() => removeProductFromCart(product.id)} badge={String.fromCharCode(10003)} className={styles.added} />\n              : <Cart onClick={() => addProductToCart(product)} />\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProductCard;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport styles from './ProductCards.module.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProduct, removeProduct, initCart } from '../../redux/cartProductsSlice/cartProductsSlice';\nimport { getUniqueCategories } from '../../redux/productsSlice/productsSlice'\nimport Categories from '../categories/Categories';\nimport ProductCard from '../productCard/ProductCard';\nimport Spinner from '../spinner/Spinner';\nimport { useParams } from 'react-router-dom';\n\nconst ProductCards = () => {\n  const { category } = useParams()\n\n  const [currentCategory, setCurrentCategory] = useState(category || 'all')\n\n  const cartProducts = useSelector(state => state.cart.cartProducts)\n  const { products, loading, error } = useSelector(state => state.products)\n  const categories = useSelector(getUniqueCategories)\n  const dispatch = useDispatch()\n\n\n  useEffect(() => {\n    dispatch(initCart());\n\n  }, [dispatch])\n\n\n  const filteredProducts = useMemo(() => {\n    if (!currentCategory || currentCategory === 'all') {\n      return products\n    }\n\n    return products.filter(product => product.category === currentCategory)\n  }, [currentCategory, products])\n\n  const isProductInCart = useCallback((id) => {\n    return cartProducts.some(product => product.id === id)\n  }, [cartProducts])\n\n  function addProductToCart(product) {\n    dispatch(addProduct({ ...product, amount: 1, summ: product.price }))\n  }\n\n  function removeProductFromCart(id) {\n    dispatch(removeProduct(id));\n  }\n\n  return (\n    <div className='container'>\n      <Categories categories={['all', ...categories]} currentCategory={currentCategory} setCurrentCategory={setCurrentCategory} />\n      {loading\n        ? <Spinner />\n        : error\n          ? <p style={{ textAlign: 'center' }}>Sorry, there is an issue with the server. We are working hard to fix it as soon as possible</p>\n          : <div className={styles.cardsContainer}>\n            {filteredProducts.map((product, index) => (\n              <ProductCard\n                key={product.id}\n                product={product}\n                index={index}\n                addProductToCart={addProductToCart}\n                removeProductFromCart={removeProductFromCart}\n                isProductInCart={isProductInCart}\n              />\n            ))}\n          </div>}\n    </div >\n  )\n}\n\nexport default ProductCards","import ProductCards from '../../components/productCards/ProductCards';\n\nconst Products = () => {\n  return (\n    <div>\n      <ProductCards />\n    </div>\n  )\n}\n\nexport default Products"],"names":["_ref","categories","currentCategory","setCurrentCategory","darkMode","useSelector","state","value","_jsx","className","styles","children","map","category","type","onClick","product","addProductToCart","removeProductFromCart","isProductInCart","index","inCart","id","_jsxs","src","encodeURIComponent","thumbnail","width","height","alt","title","loading","fetchPriority","Link","to","price","Cart","badge","String","fromCharCode","ProductCards","useParams","useState","cartProducts","cart","products","error","getUniqueCategories","dispatch","useDispatch","useEffect","initCart","filteredProducts","useMemo","filter","useCallback","some","addProduct","amount","summ","removeProduct","Categories","Spinner","style","textAlign","ProductCard","Products"],"sourceRoot":""}